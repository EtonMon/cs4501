models:
    image: tp33/django
    container_name: models
    external_links:
      -  mysql:db
      # -  groupmysql:./db
    volumes:
      - ./test_project/:/app
      # - ~/Documents/uva/isa/cs4501/:/app
    # ports:
    #   - "8001:8000"

    command: bash -c "pip install djangorestframework && pip install requests && python /app/manage.py makemigrations && python /app/manage.py migrate &&  python /app/manage.py loaddata /app/db.json && mod_wsgi-express start-server --working-directory /app --reload-on-changes /app/test_project/wsgi.py"
    # && python /app/manage.py test
exp:
    image: tp33/django
    container_name: exp
    links:
      -  models:models-api
      -  kafka:kafka
      -  es:es
      -  spark-kafka:spark-kafka
    volumes:
      - ./exp/:/app

    ports:
      - "8002:8000"

    command: bash -c "pip install djangorestframework && pip install requests && python /app/manage.py makemigrations && python /app/manage.py migrate && python /app/manage.py && mod_wsgi-express start-server --working-directory /app --reload-on-changes /app/exp/wsgi.py"
  #pipenv install requests &&

web1:
    image: tp33/django
    container_name: web1
    links:
      -  exp:exp-api

    volumes:
      - ./web/:/app

    command: bash -c "pip install djangorestframework && pip install requests && pip install --upgrade django-crispy-forms && python /app/manage.py makemigrations && python /app/manage.py migrate && python /app/manage.py && mod_wsgi-express start-server --working-directory /app --reload-on-changes /app/web/wsgi.py"

web2:
    image: tp33/django
    container_name: web2
    links:
      -  exp:exp-api

    volumes:
      - ./web/:/app

    command: bash -c "pip install djangorestframework && pip install requests && pip install --upgrade django-crispy-forms && python /app/manage.py makemigrations && python /app/manage.py migrate && python /app/manage.py && mod_wsgi-express start-server --working-directory /app --reload-on-changes /app/web/wsgi.py"

web3:
    image: tp33/django
    container_name: web3
    links:
      -  exp:exp-api

    volumes:
      - ./web/:/app

    command: bash -c "pip install djangorestframework && pip install requests && pip install --upgrade django-crispy-forms && python /app/manage.py makemigrations && python /app/manage.py migrate && python /app/manage.py && mod_wsgi-express start-server --working-directory /app --reload-on-changes /app/web/wsgi.py"

kafka:
    image: spotify/kafka
    container_name: kafka
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
    hostname: kafka

es:
    image: elasticsearch:2.0
    container_name: es
    # ports:
    #   - "9200:9200"

batch:
    image: tp33/django
    container_name: batch
    volumes:
      - ./batch/:/app
    links:
      - kafka:kafka
      - es:es
    #command: tail -F /app/fetch_items.py
    command: python /app/fetch_items.py

# selenium-chrome:
#   image: selenium/standalone-chrome
#   container_name: selenium-chrome
#   links:
#     - web1:web
#   # ports:
#   #   - "4444:4444"

# selenium-test:
#   image: tp33/django
#   container_name: selenium-test
#   links:
#     - selenium-chrome:selenium-chrome
#     - web1:web
#   volumes:
#     - ./app/selenium:/app
#   command: bash -c "pip install selenium==2.48 && python selenium_test.py"

haproxy:
    build: ./haproxy
    container_name: haproxy
    ports:
      - "8010:8000"

    links:
      - web1
      - web2
      - web3

spark-master:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.master.Master -h spark-master
  container_name: spark-master
  hostname: spark-master
  environment:
    MASTER: spark://spark-master:7077
    SPARK_CONF_DIR: /conf
  expose:
    - 7001
    - 7002
    - 7003
    - 7004
    - 7005
    - 7006
    - 7077
    - 6066
  ports:
    - 4040:4040
    - 6066:6066
    - 7077:7077
    - 8080:8080
  volumes:
    - ./data:/tmp/data

spark-worker:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
  container_name: spark-worker
  hostname: spark-worker
  environment:
    SPARK_CONF_DIR: /conf
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 512m
    SPARK_WORKER_PORT: 8881
    SPARK_WORKER_WEBUI_PORT: 8081
  links:
    - spark-master
  expose:
    - 7012
    - 7013
    - 7014
    - 7015
    - 7016
    - 8881
  ports:
    - 8081:8081
  volumes:
    - ./data:/tmp/data

spark-kafka:
    image: spotify/kafka
    container_name: spark-kafka
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
    hostname: kafka

spark-batch:
    image: tp33/django
    container_name: spark-batch
    volumes:
      - ./data:/app
    links:
      - spark-kafka:spark-kafka
    command: python /app/fetch_logs.py